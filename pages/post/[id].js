import Head from 'next/head'
import Sidebar from '../../components/Sidebar'
import Post from '../../components/Post'
import Input from '../../components/Input'
import Comment from '../../components/Comment'
import Widgets from '../../components/Widgets'
import Modal from '../../components/Modal'

import { getSession } from 'next-auth/react'
import { useRouter } from 'next/router'

import { connectToDatabase } from '../../util/mongodb'
import { ObjectId } from 'mongodb'

import { useRecoilValue } from 'recoil'
import { modalOpenState } from '../../atoms/modalAtom'
import { AnimatePresence } from 'framer-motion'
import ArrowBackIcon from '@mui/icons-material/ArrowBack'

export default function PostPage({ post }) {
  
    const router = useRouter()
    const modalOpen = useRecoilValue(modalOpenState)

    return (
        <div>
            <Head>
                <title>Post / Twitter</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head> 
            
            <main className={`main ${modalOpen && 'h-screen overflow-y-hidden'}`}>
                <Sidebar />
                
                <div className="flex-grow max-w-2xl sm:ml-[81px] xl:ml-[380px] border-r border-gray-200">
                    <div className="bg-white/80 backdrop-blur flex items-center py-2 px-3 sticky top-0 z-50 border-b border-gray-200">
                        <div className='hoverAnimation w-9 h-9 flex items-center justify-center xl-px-0'>
                            <ArrowBackIcon className='h-6 w-6' onClick={() => router.push('/')} />     
                        </div>
                        <h2 className='text-lg sm:text-xl font-bold ml-3'>Tweet</h2>
                    </div>
                    <Post post={post} postPage />
                    <Input postId={ post._id } />
                    {post.comments.length > 0 && (
                        <div className="pb-72">
                        {post.comments.map((comment, index) => (
                            <Comment
                                key={ index }
                                comment={ comment }
                            />
                        ))}
                        </div>
                    )}
                </div>

                <Widgets />

                <AnimatePresence>
                    { modalOpen && (
                        <Modal /> 
                    )}
                </AnimatePresence>
            </main>
        </div>  
    )
}

export async function getServerSideProps(context) {

  const session = await getSession(context);
  const { id } = context.query 

  // Get posts on SSR
  const { db } = await connectToDatabase();
  const post = await db.collection('posts').findOne({_id: new ObjectId(id)})
  
  return {
    props: {
      post: {
        _id: post._id.toString(),
        input: post.input,
        imageUrl: post.imageUrl ?? null,
        email: post.email,
        username: post.username,
        userImage: post.userImage,
        timestamp: post.timestamp.getHighBits() * 1000,
        likes: post.likes ?? [],
        comments: post.comments ?? [],
        liked: (post.likes && Array.isArray(post.likes) && post.likes.indexOf(session.user?.email) > -1) ? true : false
      }
    }
  }
}
