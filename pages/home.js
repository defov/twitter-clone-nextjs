import Head from 'next/head'
import Sidebar from '../components/Sidebar'
import Feed from '../components/Feed'
import Widgets from '../components/Widgets'

import { getSession } from 'next-auth/react'
import { connectToDatabase } from '../util/mongodb'
import Modal from '../components/Modal'

import { useRecoilValue } from 'recoil'
import { modalOpenState } from '../atoms/modalAtom'
import { AnimatePresence } from 'framer-motion'

export default function Home({ posts }) {

  const modalOpen = useRecoilValue(modalOpenState)

  return (
    <div>
      <Head>
        <title>Home / Twitter</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head> 
      
      <main className={`main ${modalOpen && 'h-screen overflow-y-hidden'}`}>
          <Sidebar />
          <Feed posts={posts} />
          
          <Widgets />

          <AnimatePresence>
            { modalOpen && (
                <Modal /> 
            )}
          </AnimatePresence>
      </main>
    </div>
  )
}

export async function getServerSideProps(context) {

  const session = await getSession(context);

  // Get posts on SSR
  const { db } = await connectToDatabase();
  const posts = await db.collection('posts').find().sort({ timestamp: -1 }).toArray()
  
  return {
    props: {
      posts: posts.map(post => ({
        _id: post._id.toString(),
        input: post.input,
        imageUrl: post.imageUrl ?? null,
        email: post.email,
        username: post.username,
        userImage: post.userImage,
        timestamp: post.timestamp.getHighBits() * 1000,
        likes: post.likes ?? [],
        comments: post.comments ?? [],
        liked: (post.likes && Array.isArray(post.likes) && post.likes.indexOf(session.user?.email) > -1) ? true : false
      }))
    }
  }
}
